---
-   name: Adding docker apt_key
    apt_key: keyserver={{ apt_key_server }} id={{ apt_key }}
    environment:
      http_proxy: "{{ http_proxy }}"
      https_proxy: "{{ https_proxy }}"  
    when: http_proxy is defined or https_proxy is defined    

-   name: Add docker repository into sources list.
    apt_repository: repo='{{ apt_repo }}' state=present update_cache=yes
    environment:
      http_proxy: "{{ http_proxy }}"
      https_proxy: "{{ https_proxy }}"    

-   name: install docker with version {{ docker_version }}
    apt: name={{ docker_package }}-{{ docker_version }} state=installed
    when: docker_version is defined

-   name: install docker
    apt: pkg={{ docker_package }} state=installed
    when: docker_version is not defined

-   name: Check Docker existence
    stat: path={{ docker_default }}
    register: docker_default_file

-   name: Creating extended DOCKER_OPTS
    template: src=docker.ext.j2 dest={{ default_conf }}/docker.ext

-   name: Creating reference for extended DOCKER_OPTS
    lineinfile: dest={{ docker_default }} line=". {{ default_conf }}/docker.ext" insertafter="(.*)DOCKER_OPTS=(.*)"
    when: docker_default_file.stat.exists
    register: docker_ext_action 
   
-   name: Identifying docker bridge interface subnet
    shell: "ip addr show {{ default_docker_bridge }} | grep -F 'inet' | awk '{ print $2; }'"    
    register: docker_bridge_subnet
    when: custom_bridge_subnet is defined
    
-   name: Comparing Subnet of default docker vs {{ custom_bridge_subnet }}
    command: /bin/true    
    when: docker_bridge_subnet.stdout != "" and docker_bridge_subnet.stdout.find("{{ custom_bridge_subnet }}") == -1
    register: create_custom_bridge
    
-   name: stop-docker
    service: name={{ docker_service }} state=stopped
    when: create_custom_bridge|changed   
    
-   name: Disable and delete docker bridge interface    
    shell: ip link set dev {{ default_docker_bridge }} down && brctl delbr {{ default_docker_bridge }}
    when: create_custom_bridge|changed    

-   name: start-docker
    service: name={{ docker_service }} state=started
    when: create_custom_bridge|changed  
             